use <../lib.scad>
use <../p/4-4cylo.scad>
use <../p/4-4ndis.scad>
use <../p/rect.scad>
use <../p/rect2p.scad>
use <s/2578s01.scad>
use <../p/stug-4x1.scad>
$fa=1; $fs=0.2;
function ldraw_lib__2578a(realsolid=false) = [
// 0 Brush Holder Street Sweeper for Towball Fitting
// 0 Name: 2578a.dat
// 0 Author: James Jessiman
// 0 !LDRAW_ORG Part UPDATE 2012-03
// 0 !LICENSE Licensed under CC BY 2.0 and CC BY 4.0 : see CAreadme.txt
// 
// 0 BFC CERTIFY CCW
  [0,"BFC","CERTIFY"],
  [0,"BFC","CCW"],
// 
// 0 !CATEGORY Vehicle
// 
// 0 !HISTORY 2007-05-17 [PTadmin] Header formatted for Contributor Agreement
// 0 !HISTORY 2008-07-01 [PTadmin] Official Update 2008-01
// 0 !HISTORY 2008-07-07 [cwdee] Resubmit for name change (2004-02-29)
// 0 !HISTORY 2008-07-07 [guyvivan] BFC'ed and replace all quads by ring near axlehole (2004-11-22)
// 0 !HISTORY 2008-07-07 [OrionP] Fixed L3P errors (2004-11-20)
// 0 !HISTORY 2009-05-02 [PTadmin] Official Update 2009-01
// 0 !HISTORY 2012-12-01 [MMR1988] Renamed from 2578; Subparted; some cosmetics
// 0 !HISTORY 2012-12-28 [PTadmin] Official Update 2012-03
// 
// 
// 1 16 0 0 0 1 0 0 0 1 0 0 0 1 s\2578s01.dat
  [1,16,0,0,0,1,0,0,0,1,0,0,0,1, ldraw_lib__s__2578s01(realsolid)],
// 
// 1 16 0 -36 -44 0 0 1 0 1 0 -1 0 0 stug-4x1.dat
  [1,16,0,-36,-44,0,0,1,0,1,0,-1,0,0, ldraw_lib__stug_4x1(realsolid)],
// 
// 0 // lower pivot
// 
// 4 16 -20 12 -8 -3 12 -3 3 12 -3 20 12 -8
  [4,16,-20,12,-8,-3,12,-3,3,12,-3,20,12,-8],
// 4 16 10 12 8 3 12 3 -3 12 3 -10 12 8
  [4,16,10,12,8,3,12,3,-3,12,3,-10,12,8],
// 4 16 -10 12 8 -3 12 3 -3 12 -3 -20 12 -8
  [4,16,-10,12,8,-3,12,3,-3,12,-3,-20,12,-8],
// 4 16 20 12 -8 3 12 -3 3 12 3 10 12 8
  [4,16,20,12,-8,3,12,-3,3,12,3,10,12,8],
// 3 16 20 12 -2 20 12 -8 10 12 8
  [3,16,20,12,-2,20,12,-8,10,12,8],
// 3 16 -20 12 -8 -20 12 -2 -10 12 8
  [3,16,-20,12,-8,-20,12,-2,-10,12,8],
// 1 16 0 12 0 3 0 0 0 -1 0 0 0 3 4-4ndis.dat
  [1,16,0,12,0,3,0,0,0,-1,0,0,0,3, ldraw_lib__4_4ndis(realsolid)],
// 
// 4 16 20 6 -8 3 6 -3 -3 6 -3 -20 6 -8
  [4,16,20,6,-8,3,6,-3,-3,6,-3,-20,6,-8],
// 4 16 -10 6 8 -3 6 3 3 6 3 10 6 8
  [4,16,-10,6,8,-3,6,3,3,6,3,10,6,8],
// 4 16 10 6 8 3 6 3 3 6 -3 20 6 -8
  [4,16,10,6,8,3,6,3,3,6,-3,20,6,-8],
// 4 16 -20 6 -8 -3 6 -3 -3 6 3 -10 6 8
  [4,16,-20,6,-8,-3,6,-3,-3,6,3,-10,6,8],
// 3 16 20 6 -8 20 6 -2 10 6 8
  [3,16,20,6,-8,20,6,-2,10,6,8],
// 3 16 -20 6 -2 -20 6 -8 -10 6 8
  [3,16,-20,6,-2,-20,6,-8,-10,6,8],
// 1 16 0 6 0 3 0 0 0 1 0 0 0 3 4-4ndis.dat
  [1,16,0,6,0,3,0,0,0,1,0,0,0,3, ldraw_lib__4_4ndis(realsolid)],
// 2 24 20 6 -8 -20 6 -8
  [2,24,20,6,-8,-20,6,-8],
// 
// 1 16 20 9 -5 0 -1 0 0 0 -3 3 0 0 rect.dat
  [1,16,20,9,-5,0,-1,0,0,0,-3,3,0,0, ldraw_lib__rect(realsolid)],
// 1 16 15 9 3 -5 -1 0 0 0 -3 5 -1 0 rect2p.dat
  [1,16,15,9,3,-5,-1,0,0,0,-3,5,-1,0, ldraw_lib__rect2p(realsolid)],
// 1 16 0 9 8 0 0 10 -3 0 0 0 -1 0 rect.dat
  [1,16,0,9,8,0,0,10,-3,0,0,0,-1,0, ldraw_lib__rect(realsolid)],
// 1 16 -15 9 3 5 1 0 0 0 3 5 -1 0 rect2p.dat
  [1,16,-15,9,3,5,1,0,0,0,3,5,-1,0, ldraw_lib__rect2p(realsolid)],
// 1 16 -20 9 -5 0 1 0 0 0 3 3 0 0 rect.dat
  [1,16,-20,9,-5,0,1,0,0,0,3,3,0,0, ldraw_lib__rect(realsolid)],
// 
// 0 BFC INVERTNEXT
  [0,"BFC","INVERTNEXT"],
// 1 16 0 6 0 3 0 0 0 6 0 0 0 3 4-4cylo.dat
  [1,16,0,6,0,3,0,0,0,6,0,0,0,3, ldraw_lib__4_4cylo(realsolid)],
// 
// 0 // upper pivot
// 
// 4 16 -20 -6 -8 -3 -6 -3 3 -6 -3 20 -6 -8
  [4,16,-20,-6,-8,-3,-6,-3,3,-6,-3,20,-6,-8],
// 4 16 10 -6 8 3 -6 3 -3 -6 3 -10 -6 8
  [4,16,10,-6,8,3,-6,3,-3,-6,3,-10,-6,8],
// 4 16 20 -6 -8 3 -6 -3 3 -6 3 10 -6 8
  [4,16,20,-6,-8,3,-6,-3,3,-6,3,10,-6,8],
// 4 16 -10 -6 8 -3 -6 3 -3 -6 -3 -20 -6 -8
  [4,16,-10,-6,8,-3,-6,3,-3,-6,-3,-20,-6,-8],
// 3 16 20 -6 -2 20 -6 -8 10 -6 8
  [3,16,20,-6,-2,20,-6,-8,10,-6,8],
// 3 16 -20 -6 -8 -20 -6 -2 -10 -6 8
  [3,16,-20,-6,-8,-20,-6,-2,-10,-6,8],
// 1 16 0 -6 0 3 0 0 0 -1 0 0 0 3 4-4ndis.dat
  [1,16,0,-6,0,3,0,0,0,-1,0,0,0,3, ldraw_lib__4_4ndis(realsolid)],
// 2 24 20 -6 -8 -20 -6 -8
  [2,24,20,-6,-8,-20,-6,-8],
// 
// 4 16 20 -12 -8 3 -12 -3 -3 -12 -3 -20 -12 -8
  [4,16,20,-12,-8,3,-12,-3,-3,-12,-3,-20,-12,-8],
// 4 16 -10 -12 8 -3 -12 3 3 -12 3 10 -12 8
  [4,16,-10,-12,8,-3,-12,3,3,-12,3,10,-12,8],
// 4 16 10 -12 8 3 -12 3 3 -12 -3 20 -12 -8
  [4,16,10,-12,8,3,-12,3,3,-12,-3,20,-12,-8],
// 4 16 -20 -12 -8 -3 -12 -3 -3 -12 3 -10 -12 8
  [4,16,-20,-12,-8,-3,-12,-3,-3,-12,3,-10,-12,8],
// 3 16 20 -12 -8 20 -12 -2 10 -12 8
  [3,16,20,-12,-8,20,-12,-2,10,-12,8],
// 3 16 -20 -12 -2 -20 -12 -8 -10 -12 8
  [3,16,-20,-12,-2,-20,-12,-8,-10,-12,8],
// 1 16 0 -12 0 3 0 0 0 1 0 0 0 3 4-4ndis.dat
  [1,16,0,-12,0,3,0,0,0,1,0,0,0,3, ldraw_lib__4_4ndis(realsolid)],
// 
// 1 16 20 -9 -5 0 -1 0 0 0 -3 3 0 0 rect.dat
  [1,16,20,-9,-5,0,-1,0,0,0,-3,3,0,0, ldraw_lib__rect(realsolid)],
// 1 16 15 -9 3 -5 -1 0 0 0 -3 5 -1 0 rect2p.dat
  [1,16,15,-9,3,-5,-1,0,0,0,-3,5,-1,0, ldraw_lib__rect2p(realsolid)],
// 1 16 0 -9 8 0 0 10 -3 0 0 0 -1 0 rect.dat
  [1,16,0,-9,8,0,0,10,-3,0,0,0,-1,0, ldraw_lib__rect(realsolid)],
// 1 16 -15 -9 3 5 1 0 0 0 3 5 -1 0 rect2p.dat
  [1,16,-15,-9,3,5,1,0,0,0,3,5,-1,0, ldraw_lib__rect2p(realsolid)],
// 1 16 -20 -9 -5 0 1 0 0 0 3 3 0 0 rect.dat
  [1,16,-20,-9,-5,0,1,0,0,0,3,3,0,0, ldraw_lib__rect(realsolid)],
// 
// 0 BFC INVERTNEXT
  [0,"BFC","INVERTNEXT"],
// 1 16 0 -12 0 3 0 0 0 6 0 0 0 3 4-4cylo.dat
  [1,16,0,-12,0,3,0,0,0,6,0,0,0,3, ldraw_lib__4_4cylo(realsolid)],
];
module ldraw_lib__2578a(step=0, col=false, unit=2/5, alt=false, line=0.2, solid=!$preview)
    makepoly(ldraw_lib__2578a(solid), step=step, col=col, unit=unit, alt=alt, line=line, solid=solid);
ldraw_lib__2578a(line=0.2);