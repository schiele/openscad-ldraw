use <../lib.scad>
use <1-8chrd.scad>
use <1-8cylo.scad>
use <box2-5.scad>
function ldraw_lib__daxle() = [
// 0 Duplo Axle
// 0 Name: daxle.dat
// 0 Author: Philippe Hurbain [Philo]
// 0 !LDRAW_ORG Primitive UPDATE 2017-01
// 0 !LICENSE Licensed under CC BY 2.0 and CC BY 4.0 : see CAreadme.txt
// 
// 0 BFC CERTIFY CCW
  [0,"BFC","CERTIFY"],
  [0,"BFC","CCW"],
// 
// 0 !HISTORY 2017-12-30 [PTadmin] Official Update 2017-01
// 
// 
// 1 16 0 0 0 8.31492 0 3.44415 0 1 0 -3.44415 0 8.31492 1-8cylo.dat
  [1,16,0,0,0,8.31492,0,3.44415,0,1,0,-3.44415,0,8.31492, ldraw_lib__1_8cylo()],
// 1 16 0 0 0 8.31492 0 3.44415 0 1 0 -3.44415 0 8.31492 1-8chrd.dat
  [1,16,0,0,0,8.31492,0,3.44415,0,1,0,-3.44415,0,8.31492, ldraw_lib__1_8chrd()],
// 1 16 0 1 0 8.31492 0 3.44415 0 -1 0 -3.44415 0 8.31492 1-8chrd.dat
  [1,16,0,1,0,8.31492,0,3.44415,0,-1,0,-3.44415,0,8.31492, ldraw_lib__1_8chrd()],
// 1 16 0 0 0 -8.31492 0 -3.44415 0 1 0 -3.44415 0 8.31492 1-8cylo.dat
  [1,16,0,0,0,-8.31492,0,-3.44415,0,1,0,-3.44415,0,8.31492, ldraw_lib__1_8cylo()],
// 1 16 0 0 0 -8.31492 0 -3.44415 0 1 0 -3.44415 0 8.31492 1-8chrd.dat
  [1,16,0,0,0,-8.31492,0,-3.44415,0,1,0,-3.44415,0,8.31492, ldraw_lib__1_8chrd()],
// 1 16 0 1 0 -8.31492 0 -3.44415 0 -1 0 -3.44415 0 8.31492 1-8chrd.dat
  [1,16,0,1,0,-8.31492,0,-3.44415,0,-1,0,-3.44415,0,8.31492, ldraw_lib__1_8chrd()],
// 1 16 0 0 0 -3.44415 0 8.31492 0 1 0 -8.31492 0 -3.44415 1-8cylo.dat
  [1,16,0,0,0,-3.44415,0,8.31492,0,1,0,-8.31492,0,-3.44415, ldraw_lib__1_8cylo()],
// 1 16 0 0 0 -3.44415 0 8.31492 0 1 0 -8.31492 0 -3.44415 1-8chrd.dat
  [1,16,0,0,0,-3.44415,0,8.31492,0,1,0,-8.31492,0,-3.44415, ldraw_lib__1_8chrd()],
// 1 16 0 1 0 -3.44415 0 8.31492 0 -1 0 -8.31492 0 -3.44415 1-8chrd.dat
  [1,16,0,1,0,-3.44415,0,8.31492,0,-1,0,-8.31492,0,-3.44415, ldraw_lib__1_8chrd()],
// 1 16 0 0 0 -3.44415 0 8.31492 0 1 0 8.31492 0 3.44415 1-8cylo.dat
  [1,16,0,0,0,-3.44415,0,8.31492,0,1,0,8.31492,0,3.44415, ldraw_lib__1_8cylo()],
// 1 16 0 0 0 -3.44415 0 8.31492 0 1 0 8.31492 0 3.44415 1-8chrd.dat
  [1,16,0,0,0,-3.44415,0,8.31492,0,1,0,8.31492,0,3.44415, ldraw_lib__1_8chrd()],
// 1 16 0 1 0 -3.44415 0 8.31492 0 -1 0 8.31492 0 3.44415 1-8chrd.dat
  [1,16,0,1,0,-3.44415,0,8.31492,0,-1,0,8.31492,0,3.44415, ldraw_lib__1_8chrd()],
// 0 BFC INVERTNEXT
  [0,"BFC","INVERTNEXT"],
// 1 16 5.88 0.5 -5.879 0 -2.4354 0 0.5 0 0 0 0 2.4354 box2-5.dat
  [1,16,5.88,0.5,-5.879,0,-2.4354,0,0.5,0,0,0,0,2.4354, ldraw_lib__box2_5()],
// 0 BFC INVERTNEXT
  [0,"BFC","INVERTNEXT"],
// 1 16 5.879 0.5 5.88 0 0 -2.4354 0.5 0 0 0 -2.4354 0 box2-5.dat
  [1,16,5.879,0.5,5.88,0,0,-2.4354,0.5,0,0,0,-2.4354,0, ldraw_lib__box2_5()],
// 0 BFC INVERTNEXT
  [0,"BFC","INVERTNEXT"],
// 1 16 -5.88 0.5 5.879 0 2.4354 0 0.5 0 0 0 0 -2.4354 box2-5.dat
  [1,16,-5.88,0.5,5.879,0,2.4354,0,0.5,0,0,0,0,-2.4354, ldraw_lib__box2_5()],
// 0 BFC INVERTNEXT
  [0,"BFC","INVERTNEXT"],
// 1 16 -5.879 0.5 -5.88 0 0 2.4354 0.5 0 0 0 2.4354 0 box2-5.dat
  [1,16,-5.879,0.5,-5.88,0,0,2.4354,0.5,0,0,0,2.4354,0, ldraw_lib__box2_5()],
// 4 16 8.315 0 -3.444 8.315 0 3.444 3.444 0 3.444 3.444 0 -3.444
  [4,16,8.315,0,-3.444,8.315,0,3.444,3.444,0,3.444,3.444,0,-3.444],
// 4 16 3.444 0 8.315 -3.444 0 8.315 -3.444 0 3.444 3.444 0 3.444
  [4,16,3.444,0,8.315,-3.444,0,8.315,-3.444,0,3.444,3.444,0,3.444],
// 4 16 -8.315 0 3.444 -8.315 0 -3.444 -3.444 0 -3.444 -3.444 0 3.444
  [4,16,-8.315,0,3.444,-8.315,0,-3.444,-3.444,0,-3.444,-3.444,0,3.444],
// 4 16 -3.444 0 -8.315 3.444 0 -8.315 3.444 0 -3.444 -3.444 0 -3.444
  [4,16,-3.444,0,-8.315,3.444,0,-8.315,3.444,0,-3.444,-3.444,0,-3.444],
// 4 16 3.444 0 -3.444 3.444 0 3.444 -3.444 0 3.444 -3.444 0 -3.444
  [4,16,3.444,0,-3.444,3.444,0,3.444,-3.444,0,3.444,-3.444,0,-3.444],
// 4 16 3.444 1 3.444 8.315 1 3.444 8.315 1 -3.444 3.444 1 -3.444
  [4,16,3.444,1,3.444,8.315,1,3.444,8.315,1,-3.444,3.444,1,-3.444],
// 4 16 -3.444 1 3.444 -3.444 1 8.315 3.444 1 8.315 3.444 1 3.444
  [4,16,-3.444,1,3.444,-3.444,1,8.315,3.444,1,8.315,3.444,1,3.444],
// 4 16 -3.444 1 -3.444 -8.315 1 -3.444 -8.315 1 3.444 -3.444 1 3.444
  [4,16,-3.444,1,-3.444,-8.315,1,-3.444,-8.315,1,3.444,-3.444,1,3.444],
// 4 16 3.444 1 -3.444 3.444 1 -8.315 -3.444 1 -8.315 -3.444 1 -3.444
  [4,16,3.444,1,-3.444,3.444,1,-8.315,-3.444,1,-8.315,-3.444,1,-3.444],
// 4 16 -3.444 1 3.444 3.444 1 3.444 3.444 1 -3.444 -3.444 1 -3.444
  [4,16,-3.444,1,3.444,3.444,1,3.444,3.444,1,-3.444,-3.444,1,-3.444],
];
makepoly(ldraw_lib__daxle(), line=0.2);